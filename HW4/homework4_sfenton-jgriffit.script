Script started on Sun 26 Nov 2017 06:09:04 PM EST
tuser@tutor-vserver:~/hw4$ mtip
Usage: mtip [-b board#] [-f download-file]
specify board by #: -b 1, etc.; defaults to scan.
more flags: [-x debuglevel] -e <escchar>
  Use ~ or Esc for mtip commands such as ~q or <Esc>q to quitfor more info on commands, type ~? or Esc? once program is running
now scanning for free board...
Using board # 1 

Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor>

/* Question 1. Dump of the first 4 PTEs.
*  
*  Page0 corresponds to page frame 0
*  Page1 corresponds to Page frame 1
*  Page2 corresponds to page frame 2
*  Page3 corresponds to page frame 3
*  
*  All of the PTE bits are set to 007, and the following bits:
*  D=0,A=0,U=1,W=1,V=1
*
*/


Tutor> 
Tutor> mdd     rd all
EAX=00000001 EBX=00000000   EBP=00057890
EDX=00000000 ECX=0006967c   ESP=0005788c
ESI=00013e10 EDI=00051ffc   EIP=00057a9b
EFLAGS=0206 (IF=1 SF=0 ZF=0 CF=0 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=0   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> 
Tutor> 
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003007 ......... ...0..


/* Question 2. Dump of the first 4 PTE in tutor.
*
*  The tutor program starts at VA 50000, and this is mapped to
*  PTE0x50.
*  
*  The address of PTE0x50 is 0x520c8
*
*  Page50 corresponds to page frame 32
*  Page51 corresponds to page frame 33
*  Page52 corresponds to page frame 34
*  Page53 corresponds to page frame 35
*
*  All of the PTE bits are set to 007, and the following bits:
*  D=0,A=0,U=1,W=1,V=1
*
*/


Tutor> mdd 520c8
000520c8    00032007 00033007 00034007 00035007 . ...0...@...P..


/* Question 3. Page 3 has been set to valid but has not yet been referenced
*
*  Read on page 3 (mdd 3000)
*  We can see that on page 3, on PTE0x3 the bits have been changed to 027,
*  This also means D=0,A=1,U=1,W=1,V=1
*
*  Did a write on page 3(ms 3000 1)
*  We can see that on page 3, on PTE0x3 the bits have been changed to 067,
*  This also means D=1,A=1,U=1,W=1,V=1
*
*/


Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003007 ......... ...0..
Tutor> mdd 3000
00003000    00007fd4 00000000 00205330 00008e00 ........0S .....
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003027 ......... ..'0..
Tutor> ms 3000 1
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003067 ......... ..g0..

/* Question 4. Page 3 has been set to invalid
*
*  We can see that after setting page 3 to invalid(ms 5200c 3006),
*
*  If we try to do a read on page3(mdd 3000) we will get a page fault 
*  Exception.
*   
*  If we try to do a write on page3(ms 3000 1) we will get a page fault 
*  Exception.
*
*/

Tutor> ms 52000 c 3000 6
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003006 ......... ...0..
Tutor> mdd 3000
00003000    Exception 14 at EIP=00060d9e: Page fault
Tutor> ms 3000 1
Exception 14 at EIP=00061045: Page fault

/* Question 5. Written value of 51000 in CR3 register.
*
*  Retrying 4th (ms 5200c 3006)
*
*  After setting page3 to invalid, we see that if we try to
*  read or write to that page we will get a page fault error.
* 
*  We can see from "rd all" that the CR2 register holds the address
*  that causes the page fault exception.
*
*/

Tutor> rs cs3 51000         cr3 51000
Tutor> rd all
EAX=00000001 EBX=0006f548   EBP=0006f520
EDX=00003000 ECX=000655a4   ESP=0006f520
ESI=0006f548 EDI=00000001   EIP=00061045
EFLAGS=10203 (IF=1 SF=0 ZF=0 CF=1 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> MD  mdd 52000
00052000    00000007 00001007 00002007 00003006 ......... ...0..
Tutor> ms 5200c 3006
Tutor> md 3000
00003000    Exception 14 at EIP=00060d9e: Page fault
Tutor> ms 3000 1
Exception 14 at EIP=00061045: Page fault
Tutor> rd all
EAX=00000001 EBX=0006f548   EBP=0006f520
EDX=00003000 ECX=000655a4   ESP=0006f520
ESI=0006f548 EDI=00000001   EIP=00061045
EFLAGS=10203 (IF=1 SF=0 ZF=0 CF=1 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)


/* Question 6.
*
*  We can make VA 3000 refer to PA 5000 by setting the PTE3 to point
*  to PA 5000 (ms 5200c 5007)
*
*  Due to the identity mapping VA 5000 is mapped to PA 5000. By writing
*  a value of 6 to VA 5000(ms 5000 6), it is  also mapped to
*  VA 3000(mdd 3000).
*
*  We can see that if we write a value to 3000, it would also reflect in
*  5000.
*
*/

Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003006 ......... ...0..
Tutor> ms 5200c 5007
Tutor> md 52000
00052000    07 00 00 00 07 10 00 00 07 20 00 00 07 50 00 00 ......... ...P..
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00005007 ......... ...P..
Tutor> MS  ms 4 5000 6
Tutor> mdd 5000
00005000    00000006 00000000 00000000 00000000 ................
Tutor> mdd 3000
00003000    00000006 00000000 00000000 00000000 ................


/* Question 7. Suicidal Action
*
*  We can see that overwriting PDE0 at 51c00 terminates the VM
*  (ms 51c00 0)
*
*/

Tutor> rd all
EAX=00000001 EBX=0006f548   EBP=0006f520
EDX=00003000 ECX=000655a4   ESP=0006f520
ESI=0006f548 EDI=00000001   EIP=00061045
EFLAGS=10203 (IF=1 SF=0 ZF=0 CF=1 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> 
Tutor> mdd 51c00
00051c00    00052027 00000000 00000000 00000000 ' ..............
Tutor> ms 51c00 0
Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> 
Tutor> ~q 
Quit handler: 
killing process 1834 Leaving board #1
tuser@tutor-vserver:~/hw4$ 
tuser@tutor-vserver:~/hw4$ 
tuser@tutor-vserver:~/hw4$ exit
exit

Script done on Sun 26 Nov 2017 06:15:27 PM EST
